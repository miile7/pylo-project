; This file contains all the devices that are selectable and usable
; in pylo.

[Digital Micrograph Camera]
; The kind, can either be "camera" or "microscope"
kind=camera 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/dm_camera.py 
; The name of the class to initialize
class=DMCamera
; Whether this device is disabled or not, default is false
disabled=No
; Default settings for this device, they are available in the 
; created object (if the object extends the `pylo.Device` class) in
; the `object.config_defaults` dict, note that they are strings 
; always, the key is the part after `config-default.`
config-default.show-images=No
config-default.exposure-time=0.5
config-default.binning-x=1
config-default.binning-y=1
config-default.process-level=3
config-default.ccd-readout-area-top=0
config-default.ccd-readout-area-right=4096
config-default.ccd-readout-area-bottom=4096
config-default.ccd-readout-area-left=0

[PyJEM Camera]
; The kind, can either be "camera" or "microscope"
kind=camera 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/pyjem_camera.py 
; The name of the class to initialize
class=PyJEMCamera
; Whether this device is disabled or not, default is false
disabled=No

[Digital Micrograph Test Camera]
; The kind, can either be "camera" or "microscope"
kind=camera 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/dm_test_camera.py 
; The name of the class to initialize
class=DMTestCamera
; Whether this device is disabled or not, default is false
disabled=No
; Default keys of other devices to inherit from, use a pipe character 
; ("|") as separator of multiple ones, spaces are not removed (spaces 
; matter!), overwriting is from left to right, own `config-default`s 
; overwrite inherited values
inherit-config-defaults-from=Digital Micrograph Camera

[Dummy Camera]
; The kind, can either be "camera" or "microscope"
kind=camera 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/dummy_camera.py 
; The name of the class to initialize
class=DummyCamera
; Whether this device is disabled or not, default is false
disabled=No

[PyJEM Microscope]
; The kind, can either be "camera" or "microscope"
kind=microscope 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/pyjem_microscope.py 
; The name of the class to initialize
class=PyJEMMicroscope
; Whether this device is disabled or not, default is false
disabled=No
; Default settings for this device, they are available in the 
; created object (if the object extends the `pylo.Device` class) in
; the `object.config_defaults` dict, note that they are strings 
; always, the key is the part after `config-default.`
config-default.magnetic-field-unit=
config-default.objective-lense-magnetic-field-calibration=0
config-default.focus-calibration=3
config-default.objective-lense-coarse-fine-stepwidth=32

[PyJEM offline test Microscope]
; The kind, can either be "camera" or "microscope"
kind=microscope 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/pyjem_test_microscope.py 
; The name of the class to initialize
class=PyJEMTestMicroscope
; Whether this device is disabled or not, default is false
disabled=No
; Default settings for this device, they are available in the 
; created object (if the object extends the `pylo.Device` class) in
; the `object.config_defaults` dict, note that they are strings 
; always, the key is the part after `config-default.`
config-default.magnetic-field-unit=
config-default.objective-lense-magnetic-field-calibration=0
config-default.focus-calibration=3
config-default.objective-lense-coarse-fine-stepwidth=32

[Dummy Microscope]
; The kind, can either be "camera" or "microscope"
kind=microscope 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/dummy_microscope.py 
; The name of the class to initialize
class=DummyMicroscope

[Digital Micrograph Microscope]
; The kind, can either be "camera" or "microscope"
kind=microscope 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/dm_microscope.py 
; The name of the class to initialize
class=DMMicroscope
; Whether this device is disabled or not, default is false
disabled=No
; Default settings for this device, they are available in the 
; created object (if the object extends the `pylo.Device` class) in
; the `object.config_defaults` dict, note that they are strings 
; always, the key is the part after `config-default.`
;
; Whether to use the DigitalMicrograph EMSetImagingOpticsMode() 
; function or not (this is an official unsupported function so try 
; out if it works before)
config-default.use-em-optics-mode-set-function=yes
; The unit and the calibration of the magnetic field, an increase by 
; 0x0001 in the fine lens is equal to the given value in the 
; magnetic-field-unit (`<mag field>/<lens current>`)
config-default.magnetic-field-unit=mT
; config-default.objective-lense-magnetic-field-calibration=0.0025390625
config-default.objective-lense-magnetic-field-calibration=0.002604423
; One 0x0001 step in the objectiv mini lens is equal to the given 
; value in micrometer
config-default.focus-calibration=
; One 0x0001 step in the objectiv coarse lens is equal to the given 
; amout in the objectiv fine lens
config-default.objective-lense-coarse-fine-stepwidth=32
; If the microscope is set to a value (e.g. x-tilt of 13), the program 
; will wait until the microscope reports to have a value that is the 
; tolerance away (e.g. 12 <= x-tilt <= 14) 
config-default.abs-wait-tolerance-x-tilt=1
config-default.abs-wait-tolerance-y-tilt=1
config-default.abs-wait-tolerance-objective-mini-lens=0x2
; start, step-width and end values of objective mini lens (=focus)
config-default.default-om-current-start-value=0x0
config-default.default-om-current-end-value=0x1000
config-default.default-om-current-step-width-value=0x200
; start, step-width and end values of objective lens (=mag. field)
config-default.default-ol-current-start-value=0x0
config-default.default-ol-current-end-value=0x1000
config-default.default-ol-current-step-width-value=0x200
; start, step-width and end values of x tilt
config-default.default-x-tilt-start-value=0
config-default.default-x-tilt-end-value=10
config-default.default-x-tilt-step-width-value=5
; start, step-width and end values of y tilt
config-default.default-y-tilt-start-value=0
config-default.default-y-tilt-end-value=10
config-default.default-y-tilt-step-width-value=5

[Digital Micrograph Test Microscope]
; The kind, can either be "camera" or "microscope"
kind=microscope 
; The path of the python file, can be absolute or relative to this
; file location by using "./", use "~" for current user directory, 
; path variables are allowed (for windows e.g. %PROGRAMDATA%, ...)
; Unix and Windows paths are supported
file=./devices/dm_test_microscope.py 
; The name of the class to initialize
class=DMTestMicroscope
; Whether this device is disabled or not, default is false
disabled=No
; Default keys of other devices to inherit from, use a pipe character 
; ("|") as separator of multiple ones, spaces are not removed (spaces 
; matter!), overwriting is from left to right, own `config-default`s 
; overwrite inherited values
inherit-config-defaults-from=Digital Micrograph Microscope